version: "3.4"
services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy
      cassandra1:
        condition: service_healthy
    volumes:
      - ./:/app
      - /app/tmp
    networks:
      - movie-network
  app_worker:
    build: .
    container_name: app_worker
    command: air --build.cmd "go build -o tmp/movie ./cmd/consumer/movie.go" --build.bin "./tmp/movie"
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
      cassandra1:
        condition: service_healthy
    volumes:
      - ./:/app
      - /app/tmp
    networks:
      - movie-network
  kafka:
    image: docker.io/bitnami/kafka:3.6
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics.sh",
          "--list",
          "--bootstrap-server",
          "host.docker.internal:9092",
        ]
      interval: 30s
      timeout: 30s
      retries: 4
    logging:
      driver: none
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - movie-network
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8081:8080
    logging:
      driver: none
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: Kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - movie-network
  cassandra1:
    image: cassandra:latest
    container_name: cassandra1
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_SEEDS=cassandra1
      - CASSANDRA_USER=cassandra
      - CASSANDRA_PASSWORD=cassandra
    volumes:
      - ./schema/cassandra:/schema/cassandra
      - ./.db:/var/lib/cassandra
    networks:
      - movie-network
volumes:
  kafka_data:
    driver: local
networks:
  movie-network:
    driver: bridge
